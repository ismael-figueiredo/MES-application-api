generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum Status {
  ACTIVE
  DISABLED
}

model User {
  id            String   @id @default(uuid())
  name          String   @unique
  avatar_url    String?
  password_hash String
  status        Status   @default(ACTIVE)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  role          UserRole @default(USER)

  sector    Sector @relation(fields: [sector_id], references: [id])
  sector_id Int

  @@map("users")
}

model Sector {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  users     User[]
  status    Status      @default(ACTIVE)
  Operation Operation[]
  Machine   Machine[]

  @@map("sectors")
}

model Machine {
  id     Int    @id @default(autoincrement())
  name   String @unique
  status Status @default(ACTIVE)

  sector          Sector            @relation(fields: [sector_id], references: [id])
  sector_id       Int
  TimeOfOperation TimeOfOperation[]

  @@map("machines")
}

model Operation {
  id   Int    @id @default(autoincrement())
  name String @unique

  sector          Sector            @relation(fields: [sector_id], references: [id])
  sector_id       Int
  TimeOfOperation TimeOfOperation[]

  @@map("operations")
}

model TimeOfOperation {
  id   Int    @id @default(autoincrement())
  time String
  item Int

  operation    Operation @relation(fields: [operation_id], references: [id])
  operation_id Int

  machine    Machine @relation(fields: [machine_id], references: [id])
  machine_id Int

  @@map("times_of_operations")
}

model ReasonForStopping {
  id   Int    @id @default(autoincrement())
  name String @unique

  @@map("reason_for_stopping")
}

model ReasonForScrap {
  id   Int    @id @default(autoincrement())
  name String @unique

  @@map("reason_for_scrap")
}
